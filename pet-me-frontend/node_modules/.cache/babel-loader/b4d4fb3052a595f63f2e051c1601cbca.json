{"ast":null,"code":"var _jsxFileName = \"/Users/manuelasanchez/Development/mod5/project/PetMe/pet-me-frontend/src/App.js\";\nimport React from 'react';\nimport Navbar from './components/Navbar';\nimport Routes from './router/Routes';\nimport './App.css';\nimport { getCurrentUser } from './actions/allActions';\nimport { connect } from 'react-redux';\n\nclass App extends React.Component {\n  componentDidMount() {\n    this.props.getCurrentUser();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"background-overlay\",\n      style: {\n        position: 'fixed',\n        backgroundColor: 'rgba(255, 255, 255, 0.6)',\n        top: '0',\n        left: '0',\n        height: '100%',\n        width: '100%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(\"header\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(Navbar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    })), React.createElement(\"section\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"container_demo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(Routes, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nconst mapStateToProps = ({\n  user\n}) => ({\n  user\n});\n\nconst mapDispatchToProps = dispatch => ({\n  getCurrentUser: () => dispatch(getCurrentUser())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["/Users/manuelasanchez/Development/mod5/project/PetMe/pet-me-frontend/src/App.js"],"names":["React","Navbar","Routes","getCurrentUser","connect","App","Component","componentDidMount","props","render","position","backgroundColor","top","left","height","width","mapStateToProps","user","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,OAAO,WAAP;AACA,SAASC,cAAT,QAA+B,sBAA/B;AACA,SAAQC,OAAR,QAAsB,aAAtB;;AAEA,MAAMC,GAAN,SAAkBL,KAAK,CAACM,SAAxB,CAAkC;AAEhCC,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,KAAL,CAAWL,cAAX;AACD;;AAEDM,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEE;AACE,MAAA,SAAS,EAAC,oBADZ;AAEE,MAAA,KAAK,EAAE;AACLC,QAAAA,QAAQ,EAAE,OADL;AAELC,QAAAA,eAAe,EAAE,0BAFZ;AAGLC,QAAAA,GAAG,EAAE,GAHA;AAILC,QAAAA,IAAI,EAAE,GAJD;AAKLC,QAAAA,MAAM,EAAE,MALH;AAMLC,QAAAA,KAAK,EAAE;AANF,OAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAaE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,EAAE,EAAC,gBAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,CAJF,CAbF,CADF;AA0BD;;AAjC+B;;AAoClC,MAAMC,eAAe,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,MAAa;AAAEA,EAAAA;AAAF,CAAb,CAAxB;;AAEA,MAAMC,kBAAkB,GAAGC,QAAQ,KAAK;AACtChB,EAAAA,cAAc,EAAE,MAAMgB,QAAQ,CAAChB,cAAc,EAAf;AADQ,CAAL,CAAnC;;AAIA,eAAeC,OAAO,CAACY,eAAD,EAAkBE,kBAAlB,CAAP,CAA6Cb,GAA7C,CAAf","sourcesContent":["import React from 'react';\nimport Navbar from './components/Navbar';\nimport Routes from './router/Routes';\nimport './App.css';\nimport { getCurrentUser } from './actions/allActions';\nimport {connect} from 'react-redux'\n\nclass App extends React.Component {\n\n  componentDidMount() {\n    this.props.getCurrentUser()\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n    \n        <div\n          className=\"background-overlay\"\n          style={{\n            position: 'fixed',\n            backgroundColor: 'rgba(255, 255, 255, 0.6)',\n            top: '0',\n            left: '0',\n            height: '100%',\n            width: '100%',\n          }}\n         />\n        <div className=\"container\">\n          <header>\n            <Navbar />\n          </header>\n          <section>\n            <div id=\"container_demo\" >\n              <Routes />\n            </div>\n          </section>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({user}) => ({ user })\n\nconst mapDispatchToProps = dispatch => ({\n  getCurrentUser: () => dispatch(getCurrentUser())\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n"]},"metadata":{},"sourceType":"module"}