{"ast":null,"code":"var _jsxFileName = \"/Users/manuelasanchez/Development/mod5/project/PetMe/pet-me-frontend/src/components/PetContainer.js\";\nimport React from 'react';\nimport { Client } from \"@petfinder/petfinder-js\";\nimport Petcard from './Petcard';\nimport '../Pet.css';\nimport { connect } from 'react-redux';\nimport { creatingMatches } from '../actions/allActions';\nimport Swipeable from \"react-swipy\";\nlet direction = '';\n\nclass PetContainer extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      dogs: [],\n      cats: [],\n      index: 0\n    };\n\n    this.onAfterSwipe = pet => {\n      if (direction === 'left') {\n        this.props.creatingMatches(this.props.user, pet);\n        this.setState({\n          index: this.state.index + 1\n        });\n      } else if (direction === 'right') {\n        if (pet.type === 'Dog') {\n          const removingSelectedPet = this.state.dogs.filter(dog => dog.id !== pet.id);\n          this.setState({\n            dogs: removingSelectedPet\n          });\n        } else if (pet.type === 'Cat') {\n          const removingSelectedPet = this.state.cats.filter(cat => cat.id !== pet.id);\n          this.setState({\n            cats: removingSelectedPet\n          });\n        }\n\n        this.setState({\n          index: this.state.index + 1\n        });\n      }\n    };\n  }\n\n  componentDidMount() {\n    const client = new Client({\n      apiKey: \"RqPmGmPGHQWIiCVG5gzphrFaw1QomsafGhyq22Q5yOz19zejel\",\n      secret: \"sShiuXCl1mlIFd4p4Fq5TCwkCzf6ACDDidNipna4\"\n    });\n    client.animal.search({\n      type: \"Dog\"\n    }).then(response => {\n      return this.setState({\n        dogs: response.data.animals\n      });\n    }).catch(error => {\n      return error;\n    });\n    client.animal.search({\n      type: \"Cat\"\n    }).then(response => {\n      return this.setState({\n        cats: response.data.animals\n      });\n    }).catch(error => {\n      return error;\n    });\n  }\n\n  render() {\n    const makingOneCat = this.state.cats.map((cat, idx) => {\n      return React.createElement(Swipeable, {\n        key: cat.id,\n        onSwipe: dir => {\n          direction = dir;\n        },\n        onAfterSwipe: () => this.onAfterSwipe(cat),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(Petcard, {\n        hidden: idx !== this.state.index,\n        origin: 'petContainer',\n        key: cat.id,\n        pet: cat,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }));\n    });\n    const makingOneDog = this.state.dogs.map((dog, idx) => {\n      return React.createElement(Swipeable, {\n        key: dog.id,\n        onSwipe: dir => {\n          direction = dir;\n        },\n        onAfterSwipe: () => this.onAfterSwipe(dog),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, React.createElement(Petcard, {\n        hidden: idx !== this.state.index,\n        origin: 'petContainer',\n        key: dog.id,\n        pet: dog,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }));\n    });\n\n    if (this.props.location.search === \"?type=cats\") {\n      return React.createElement(\"div\", {\n        id: \"wrapper\",\n        className: \"pet-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, \"Start Swiping\", React.createElement(\"span\", {\n        role: \"img\",\n        \"aria-label\": \"emoji\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, \"\\u2764\\uFE0F\")), React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, \"Swipe Left To Add To Your Adoption List\"), React.createElement(\"div\", {\n        className: \"card\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, makingOneCat));\n    } else if (this.props.location.search === \"?type=dogs\") {\n      return React.createElement(\"div\", {\n        id: \"wrapper\",\n        className: \"pet-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, \"Start Swiping\", React.createElement(\"span\", {\n        role: \"img\",\n        \"aria-label\": \"emoji\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, \"\\u2764\\uFE0F\")), React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, \"Swipe Left To Add To Your Adoption List\"), React.createElement(\"div\", {\n        className: \"card\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, makingOneDog));\n    } else {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, \"Sorry we don't have that type of pet available yet\");\n    }\n  }\n\n}\n\nconst mapStateToProps = ({\n  user\n}) => ({\n  user\n});\n\nconst mapDispatchToProps = dispatch => ({\n  creatingMatches: (user, pet) => dispatch(creatingMatches(user, pet))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PetContainer);","map":{"version":3,"sources":["/Users/manuelasanchez/Development/mod5/project/PetMe/pet-me-frontend/src/components/PetContainer.js"],"names":["React","Client","Petcard","connect","creatingMatches","Swipeable","direction","PetContainer","Component","state","dogs","cats","index","onAfterSwipe","pet","props","user","setState","type","removingSelectedPet","filter","dog","id","cat","componentDidMount","client","apiKey","secret","animal","search","then","response","data","animals","catch","error","render","makingOneCat","map","idx","dir","makingOneDog","location","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Client } from \"@petfinder/petfinder-js\"\nimport Petcard from './Petcard'\nimport '../Pet.css'\nimport { connect } from 'react-redux'\nimport { creatingMatches } from '../actions/allActions'\nimport Swipeable from \"react-swipy\"\n\nlet direction = ''\n\nclass PetContainer extends React.Component {\n\n  state = {\n      dogs: [],\n      cats: [],\n      index: 0\n    }\n\n\n  componentDidMount() {\n    const client = new Client({apiKey: \"RqPmGmPGHQWIiCVG5gzphrFaw1QomsafGhyq22Q5yOz19zejel\", secret: \"sShiuXCl1mlIFd4p4Fq5TCwkCzf6ACDDidNipna4\"});\n\n    client.animal.search({type: \"Dog\"})\n      .then(response => {\n          return this.setState({\n            dogs: response.data.animals\n          })\n      })\n      .catch(error => {\n          return error\n      });\n\n      client.animal.search({type: \"Cat\"})\n        .then(response => {\n            return this.setState({\n              cats: response.data.animals\n            })\n        })\n        .catch(error => {\n            return error\n        });\n     }\n\n\n    onAfterSwipe = (pet) => {\n        if (direction === 'left'){\n          this.props.creatingMatches(this.props.user, pet)\n          this.setState({\n            index: this.state.index + 1\n          })\n        }\n        else if (direction === 'right'){\n          if(pet.type === 'Dog'){\n              const removingSelectedPet = this.state.dogs.filter(dog => dog.id !== pet.id)\n            this.setState({\n              dogs: removingSelectedPet\n            })\n          }\n         else if(pet.type === 'Cat'){\n             const removingSelectedPet = this.state.cats.filter(cat => cat.id !== pet.id)\n           this.setState({\n             cats: removingSelectedPet\n           })\n         }\n         this.setState({\n           index: this.state.index + 1\n         })\n        }\n      }\n\n\n  render(){\n    const makingOneCat = this.state.cats.map((cat, idx) => {\n      return (\n            <Swipeable\n              key={cat.id}\n              onSwipe={dir => { direction = dir }}\n              onAfterSwipe={() => this.onAfterSwipe(cat)}>\n                <Petcard\n                  hidden={idx !== this.state.index}\n                  origin={'petContainer'}\n                  key={cat.id}\n                  pet={cat} />\n              </Swipeable>\n            )\n          })\n\n    const makingOneDog = this.state.dogs.map((dog, idx) => {\n      return (\n        <Swipeable key={dog.id}\n          onSwipe={dir => { direction = dir }}\n          onAfterSwipe={() => this.onAfterSwipe(dog)}>\n            <Petcard\n              hidden={idx !== this.state.index}\n              origin={'petContainer'}\n              key={dog.id}\n              pet={dog}/>\n        </Swipeable>\n      )\n    })\n\n    if(this.props.location.search === \"?type=cats\") {\n      return(\n        <div id=\"wrapper\" className=\"pet-container\">\n          <h2>Start Swiping<span role=\"img\" aria-label=\"emoji\">❤️</span></h2>\n          <h3>Swipe Left To Add To Your Adoption List</h3>\n          <div className=\"card\">{makingOneCat}</div>\n        </div>\n      )\n    }\n    else if (this.props.location.search === \"?type=dogs\") {\n      return (\n        <div id=\"wrapper\" className=\"pet-container\">\n          <h2>Start Swiping<span role=\"img\" aria-label=\"emoji\">❤️</span></h2>\n          <h3>Swipe Left To Add To Your Adoption List</h3>\n          <div className=\"card\">{makingOneDog}</div>\n        </div>\n      )\n    }\n    else {\n      return (\n        <div>Sorry we don't have that type of pet available yet</div>\n      )\n    }\n  }\n}\n\nconst mapStateToProps = ({user}) => ({ user })\n\nconst mapDispatchToProps = dispatch => ({\n  creatingMatches: (user, pet) => dispatch(creatingMatches(user, pet))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PetContainer)\n"]},"metadata":{},"sourceType":"module"}