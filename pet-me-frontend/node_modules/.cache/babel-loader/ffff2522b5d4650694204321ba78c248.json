{"ast":null,"code":"const loginUser = user => ({\n  type: 'LOGIN_USER',\n  payload: user\n});\n\nconst usersPick = matches => ({\n  type: 'USERS_PICK',\n  payload: matches\n});\n\nconst chosenPet = petUserId => ({\n  type: 'EDITTING_PET',\n  payload: petUserId\n});\n\nconst removeMatch = match => ({\n  type: 'DELETE_MATCH',\n  payload: match\n});\n\nexport const newUser = userInfo => {\n  console.log(\"hshshs\");\n  return dispatch => {\n    fetch(\"http://localhost:3000/api/v1/users\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accepts: \"application/json\"\n      },\n      body: JSON.stringify({\n        user: userInfo\n      })\n    }).then(resp => resp.json()).then(userData => {\n      dispatch(loginUser(userData), localStorage.setItem(\"token\", userData.jwt));\n    });\n  };\n};\n\nconst showModal = () => {\n  document.getElementsByClassName(\"modal\")[0].style.display = \"flex\";\n};\n\nexport const gettingUser = userInfo => {\n  return dispatch => {\n    fetch(\"http://localhost:3000/api/v1/login\", {\n      method: \"POST\",\n      headers: {\n        \"content-type\": \"application/json\",\n        Accepts: \"application/json\"\n      },\n      body: JSON.stringify({\n        user: userInfo\n      })\n    }).then(resp => resp.ok ? resp.json().then(userData => {\n      dispatch(loginUser(userData), localStorage.setItem(\"token\", userData.jwt));\n    }) : resp.json().then(userData => showModal()));\n  };\n};\nexport const getCurrentUser = () => dispatch => {\n  let token = localStorage.token;\n  token && fetch(\"http://localhost:3000/api/v1/current_user\", {\n    method: \"GET\",\n    headers: {\n      \"content-type\": \"application/json\",\n      Accepts: \"application/json\",\n      Authorization: \"\".concat(token)\n    }\n  }).then(resp => resp.json()).then(user => {\n    dispatch(loginUser(user));\n  });\n};\nexport const creatingMatches = (user, pet) => {\n  console.log(\"pet created\", pet);\n  return dispatch => {\n    fetch(\"http://localhost:3000/matches\", {\n      method: \"POST\",\n      headers: {\n        \"content-type\": \"application/json\",\n        accepts: \"application/json\"\n      },\n      body: JSON.stringify({\n        user_id: user.id,\n        pet: {\n          name: pet.name,\n          gender: pet.gender,\n          img_full: pet.photos[0].full,\n          description: pet.description,\n          adoption_id: pet.id,\n          age: pet.age,\n          contact: pet.contact.email,\n          user_id: null\n        }\n      })\n    }).then(resp => resp.json()).then(data => {\n      dispatch(usersPick(data));\n    });\n  };\n};\nexport const deletingAMatch = match => {\n  return dispatch => {\n    fetch(\"http://localhost:3000/matches/\".concat(match.id), {\n      method: 'DELETE'\n    }).then(dispatch(removeMatch(match)));\n  };\n};\nexport const addingUserIDtoPet = (pet, user) => {\n  return dispatch => {\n    fetch(\"http://localhost:3000/pets/\".concat(pet.id), {\n      method: \"PATCH\",\n      headers: {\n        \"content-type\": \"application/json\",\n        accepts: \"application/json\"\n      },\n      body: JSON.stringify({\n        user_id: user.id\n      })\n    }).then(resp => resp.json()).then(data => {\n      dispatch(chosenPet(data));\n    });\n  };\n};\nexport const gettingAdoptedPet = id => {\n  return dispatch => {\n    fetch(\"http://localhost:3000/pets/\".concat(id)).then(resp => resp.json()).then(data => {\n      dispatch(chosenPet(data));\n    });\n  };\n};","map":{"version":3,"sources":["/Users/manuelasanchez/Development/mod5/project/PetMe/pet-me-frontend/src/actions/allActions.js"],"names":["loginUser","user","type","payload","usersPick","matches","chosenPet","petUserId","removeMatch","match","newUser","userInfo","console","log","dispatch","fetch","method","headers","Accepts","body","JSON","stringify","then","resp","json","userData","localStorage","setItem","jwt","showModal","document","getElementsByClassName","style","display","gettingUser","ok","getCurrentUser","token","Authorization","creatingMatches","pet","accepts","user_id","id","name","gender","img_full","photos","full","description","adoption_id","age","contact","email","data","deletingAMatch","addingUserIDtoPet","gettingAdoptedPet"],"mappings":"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","sourcesContent":["const loginUser = (user) => ({type: 'LOGIN_USER', payload: user})\nconst usersPick = (matches) => ({type: 'USERS_PICK', payload: matches})\nconst chosenPet = (petUserId) => ({type:'EDITTING_PET', payload: petUserId})\nconst removeMatch = (match) => ({type: 'DELETE_MATCH', payload: match})\n\nexport const newUser = (userInfo) => {\n  console.log(\"hshshs\")\n  return (dispatch) => {\n    fetch(\"http://localhost:3000/api/v1/users\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accepts: \"application/json\"\n      },\n      body: JSON.stringify({ user: userInfo })\n    })\n      .then(resp => resp.json())\n      .then(userData => {dispatch(loginUser(userData),\n        localStorage.setItem(\"token\", userData.jwt))\n      });\n     }\n    }\n\nconst showModal = () => {\n  document.getElementsByClassName(\"modal\")[0].style.display = \"flex\"\n}\n\nexport const gettingUser = (userInfo) => {\n  return (dispatch) => {\n    fetch(\"http://localhost:3000/api/v1/login\", {\n      method: \"POST\",\n      headers: {\n        \"content-type\": \"application/json\",\n        Accepts: \"application/json\"\n      },\n      body: JSON.stringify({ user: userInfo })\n    })\n      .then(resp => (resp.ok ?\n        resp.json().then(userData => {dispatch(loginUser(userData),\n          localStorage.setItem(\"token\", userData.jwt))})\n          :\n          resp.json().then(userData => showModal())\n        ))\n    }\n}\n\nexport const getCurrentUser = () => (dispatch) => {\n    let token = localStorage.token;\n    token\n      && fetch(\"http://localhost:3000/api/v1/current_user\", {\n          method: \"GET\",\n          headers: {\n            \"content-type\": \"application/json\",\n            Accepts: \"application/json\",\n            Authorization: `${token}`\n          }\n        })\n          .then(resp => resp.json())\n          .then(user =>{dispatch(loginUser(user))\n\n          })\n  }\n\n  export const creatingMatches = (user, pet) => {\n    console.log(\"pet created\",pet)\n    return (dispatch) => {\n      fetch(\"http://localhost:3000/matches\", {\n        method: \"POST\",\n        headers: {\n          \"content-type\": \"application/json\",\n          accepts: \"application/json\"\n        },\n        body: JSON.stringify({\n          user_id: user.id,\n          pet: {\n            name: pet.name,\n            gender: pet.gender,\n            img_full: pet.photos[0].full,\n            description: pet.description,\n            adoption_id: pet.id,\n            age: pet.age,\n            contact: pet.contact.email,\n            user_id: null\n          }\n        })\n      })\n        .then(resp => resp.json())\n        .then(data => {dispatch(usersPick(data))\n      })\n    }\n  }\n\nexport const deletingAMatch = (match) => {\n  return (dispatch) => {\n    fetch(`http://localhost:3000/matches/${match.id}`, {\n      method:'DELETE',\n    })\n    .then(dispatch(removeMatch(match)))\n  }\n}\n\nexport const addingUserIDtoPet = (pet, user) => {\n  return (dispatch) => {\n    fetch(`http://localhost:3000/pets/${pet.id}`, {\n      method: \"PATCH\",\n      headers: {\n        \"content-type\": \"application/json\",\n        accepts: \"application/json\"\n      },\n      body: JSON.stringify({\n        user_id: user.id\n      })\n    })\n    .then(resp => resp.json())\n    .then(data => {dispatch(chosenPet(data))\n    })\n  }\n}\n\nexport const gettingAdoptedPet = (id) => {\n  return (dispatch) => {\n    fetch(`http://localhost:3000/pets/${id}`)\n    .then(resp => resp.json())\n    .then(data => {dispatch(chosenPet(data))\n    })\n  }\n}\n"]},"metadata":{},"sourceType":"module"}